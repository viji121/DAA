#include <stdio.h>


int max(int a, int b) {
    return (a > b) ? a : b;
}


int knapsack(int capacity, int weights[], int values[], int num_items) {
    int dp[num_items + 1][capacity + 1];

    for (int i = 0; i <= num_items; i++) {
        for (int w = 0; w <= capacity; w++) {
            if (i == 0 || w == 0) {
                dp[i][w] = 0;
            } else if (weights[i - 1] <= w) {
                dp[i][w] = max(values[i - 1] + dp[i - 1][w - weights[i - 1]], dp[i - 1][w]);
            } else {
                dp[i][w] = dp[i - 1][w];
            }
        }
    }

    return dp[num_items][capacity];
}

int main() {
    int num_items, capacity;

    printf("Enter the number of items: ");
    scanf("%d", &num_items);

    int weights[num_items], values[num_items];

    printf("Enter the weights and values of the items:\n");
    for (int i = 0; i < num_items; i++) {
        scanf("%d %d", &weights[i], &values[i]);
    }

    printf("Enter the knapsack capacity: ");
    scanf("%d", &capacity);

    int max_value = knapsack(capacity, weights, values, num_items);
    printf("Maximum value that can be obtained: %d\n", max_value);

    return 0;
}
